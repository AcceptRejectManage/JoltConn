/*
 * This source file was generated by the Gradle 'init' task
 */
package joltconnlib;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandler;
import java.security.MessageDigest;
import java.util.HexFormat;

import com.github.raeleus.gamejoltapi.GameJoltRequest;
import com.github.raeleus.gamejoltapi.GameJoltDataStore.DataStoreSetRequest;

public class DataStoreState {
    
    private static final String GameJoltSite = "https://api.gamejolt.com/api/game/";
    private static final String GameJoltVersion = "v1_2";
    private final MessageDigest sha;
    private static String GameKey = "";
    private static String GameID = "";

    private String GetRawUrl(GameJoltRequest r) {
        return GameJoltSite + GameJoltVersion + r.toString();
    }

    private URI GetEncodedUrl(String rawUrl) throws URISyntaxException {
        String signature = HexFormat.of().formatHex(sha.digest((rawUrl+GameKey).getBytes()));
        URI uri = new URI(rawUrl + "&signature=" + signature);
        return uri;
    }

    public DataStoreState() {
        MessageDigest temp;
        try{
            temp = MessageDigest.getInstance("SHA-1");
        } catch (Exception e) {
            temp = null;
            e.printStackTrace();
        }
        sha = temp;
    }
    public static void setGameState(String GameKey, String GameID) {
        DataStoreState.GameKey = GameKey;
        DataStoreState.GameID = GameID;
        
    }

    public static void setGameStateFromFile(File path) {

        /* TODO */
    }

    public void parseDirectory() {

        String JoltPath =  GetRawUrl(DataStoreSetRequest.builder().gameID(GameID).key("ABC").data("CCC").build());

        try{    
            
            URI uri = GetEncodedUrl(JoltPath);
            HttpRequest r = HttpRequest.newBuilder().uri(uri).GET().build();
            BodyHandler<String> bh = HttpResponse.BodyHandlers.ofString();
            HttpResponse<String> response = HttpClient.newHttpClient().send(r, bh);
            System.out.println(response.body());
            
        } catch (URISyntaxException e) {
            e.printStackTrace();
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
